{"version":3,"sources":["scripts/main.js"],"names":["previousHeadline","thead","document","querySelector","tBody","rowsList","querySelectorAll","leaveNumbers","RegExp","numbersFilter","value","Number","replace","sortByColumnName","callback","tableRows","columnIndex","fieldName","isColumnReversed","sortStrings","sortedColumn","sort","prevPerson","nextPerson","prevProperty","children","textContent","nextProperty","localeCompare","match","isReversed","addEventListener","ckickEvent","preventDefault","currentHeadline","target","cellIndex","append","e","selectedRow","closest","className","classList","toggle","body","insertAdjacentHTML","form","inputs","button","labels","inputsList","map","label","firstElementChild","pushNotification","posTop","posRight","title","decriptionText","type","notification","createElement","dataset","qa","header","description","add","style","top","right","innerText","setTimeout","remove","elementDataSets","newEmployee","employee","elem","headlineName","length","isCheckingPassed","Object","values","every","position","office","age","salary","convertedSalary","name","toLocaleString"],"mappings":"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","file":"main.b197b729.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst thead = document.querySelector('tr');\nconst tBody = document.querySelector('tbody');\nlet rowsList = tBody.querySelectorAll('tr');\n\nconst leaveNumbers = new RegExp(/[^\\d]/g);\n\nfunction numbersFilter(value) {\n  return Number(value.replace(leaveNumbers, ''));\n}\n\nfunction sortByColumnName(\n  callback, tableRows, columnIndex, fieldName, isColumnReversed\n) {\n  const sortStrings = (prevPerson, nextPerson) => {\n    const prevProperty = prevPerson.children[columnIndex].textContent;\n    const nextProperty = nextPerson.children[columnIndex].textContent;\n\n    return isColumnReversed\n      ? prevProperty.localeCompare(nextProperty)\n      : nextProperty.localeCompare(prevProperty);\n  };\n\n  const sortNumbers = (prevPerson, nextPerson) => {\n    const prevProperty = prevPerson.children[columnIndex].textContent;\n    const nextProperty = nextPerson.children[columnIndex].textContent;\n\n    if (prevProperty.match(leaveNumbers) !== null) {\n      return isColumnReversed\n        ? callback(prevProperty) - callback(nextProperty)\n        : callback(nextProperty) - callback(prevProperty);\n    }\n\n    return isColumnReversed\n      ? prevProperty - nextProperty\n      : nextProperty - prevProperty;\n  };\n\n  let sortedColumn = null;\n\n  switch (fieldName) {\n    case 'Name':\n    case 'Position':\n    case 'Office':\n      sortedColumn = [...tableRows].sort(sortStrings);\n      break;\n\n    case 'Age':\n    case 'Salary':\n      sortedColumn = [...tableRows].sort(sortNumbers);\n      break;\n\n    default:\n      break;\n  }\n\n  return sortedColumn;\n}\n\nlet previousHeadline;\nlet isReversed = true;\n\nthead.addEventListener('click', ckickEvent => {\n  ckickEvent.preventDefault();\n\n  const currentHeadline = ckickEvent.target.textContent;\n\n  if (previousHeadline === currentHeadline) {\n    isReversed = !isReversed;\n  } else {\n    isReversed = true;\n  }\n\n  previousHeadline = ckickEvent.target.textContent;\n\n  const columnIndex = ckickEvent.target.cellIndex;\n  const sortedColumn = sortByColumnName(\n    numbersFilter, rowsList, columnIndex, previousHeadline, isReversed\n  );\n\n  tBody.append(...sortedColumn);\n});\n\ntBody.addEventListener('click', e => {\n  const selectedRow = e.target.closest('tr');\n\n  for (const row of rowsList) {\n    row.className = '';\n  }\n\n  selectedRow.classList.toggle('active');\n});\n\nconst body = document.querySelector('body');\n\nbody.insertAdjacentHTML('beforeend', `\n  <form class=\"new-employee-form\">\n    <label>\n    Name:\n      <input\n        name=\"name\"\n        type=\"text\"\n        data-qa=\"name\" \n      >\n    </label>\n    <label>\n    Position:\n      <input\n        name=\"name\"\n        type=\"text\"\n        data-qa=\"position\"\n      >\n    </label>\n    <label>\n    Office:\n      <select\n        data-qa=\"office\" \n      >\n        <option>Tokyo</option>\n        <option>Singapore</option>\n        <option>London</option>\n        <option>New York</option>\n        <option>Edinburgh</option>\n        <option>San Francisco</option>\n      </select>\n    </label>\n    <label>\n    Age:\n      <input\n        name=\"name\"\n        type=\"number\"\n        data-qa=\"age\" \n      >\n    </label>\n    <label>\n    Salary:\n      <input\n        name=\"name\"\n        type=\"number\"\n        data-qa=\"salary\" \n      >\n    </label>\n    <button type=\"button\" value=\"add\">Save to table</button>\n\n  </form>\n`);\n\nconst form = document.querySelector('form');\nconst inputs = [...document.querySelectorAll('input')];\nconst button = document.querySelector('button');\n\nconst labels = [...document.querySelectorAll('label')];\nconst inputsList = labels.map(label => label.firstElementChild);\n\nform.addEventListener('click', e => {\n  const closestLabel = e.target.closest('label');\n\n  if (!closestLabel) {\n    return false;\n  }\n});\n\nbutton.addEventListener('click', e => {\n  const elementDataSets = inputsList;\n\n  const newEmployee = {};\n\n  const employee = elementDataSets.map(elem => {\n    const headlineName = elem.dataset.qa;\n    const value = elem.value;\n\n    switch (headlineName) {\n      case 'name':\n      case 'position':\n        if (value.length < 4) {\n          newEmployee[headlineName] = null;\n\n          if (headlineName === 'name') {\n            pushNotification(\n              500, 10, 'Error', `${headlineName} must be longer than 4`, 'error'\n            );\n          };\n\n          if (headlineName === 'position') {\n            pushNotification(\n              350, 10, 'Error', `${headlineName} must be longer than 4`, 'error'\n            );\n          }\n        } else {\n          newEmployee[headlineName] = value;\n        }\n        break;\n\n      case 'age':\n        if (+value < 18 || +value > 90) {\n          newEmployee[headlineName] = null;\n\n          pushNotification(650, 10, 'Error', 'Invalid Age', 'error');\n        } else {\n          newEmployee[headlineName] = +value;\n        }\n        break;\n\n      case 'office':\n      case 'salary':\n        if (value === '') {\n          newEmployee[headlineName] = null;\n        } else {\n          newEmployee[headlineName] = value;\n        }\n\n        break;\n    }\n\n    return employee;\n  });\n\n  const allFieldAreValid = Object.values(newEmployee)\n    .every(value => value !== null);\n\n  const isCheckingPassed = allFieldAreValid;\n\n  if (isCheckingPassed) {\n    pushNotification(\n      400,\n      10,\n      'Great!',\n      'employee successfuly added',\n      'success'\n    );\n\n    const { position, office, age, salary } = newEmployee;\n    const convertedSalary = Number(salary);\n\n    tBody.insertAdjacentHTML('beforeend', `\n    <tr>\n      <td>${newEmployee.name}</td>\n      <td>${position}</td>\n      <td>${office}</td>\n      <td>${age}</td>\n      <td>$${convertedSalary.toLocaleString('en-US')}</td>\n    </tr>\n    `);\n\n    for (const input of inputs) {\n      input.value = '';\n    }\n\n    rowsList = [...tBody.children];\n  }\n});\n\nfunction pushNotification(posTop, posRight, title, decriptionText, type) {\n  const notification = document.createElement('div');\n\n  notification.dataset.qa = 'notification';\n\n  const header = document.createElement('h2');\n  const description = document.createElement('p');\n\n  notification.classList.add('notification', `${type}`);\n  notification.style.top = `${posTop}px`;\n  notification.style.right = `${posRight}px`;\n\n  header.className = 'title';\n  header.textContent = title;\n  description.innerText = decriptionText;\n\n  notification.append(header);\n  notification.append(description);\n\n  body.append(notification);\n\n  setTimeout(() => notification.remove(), 2000);\n};\n"]}